2.19 Outline the steps involved in establishing a JDBC connection to a database.

->  Stepbystep instructions for establishing a JDBC connection to a database in Java:
    1.  Import JDBC Libraries: 
        Import the required JDBC libraries into your Java program.
    2.  Load the JDBC Driver: 
        Use `Class.forName("your_driver_class_name")` to load the appropriate JDBC driver class for your database.
    3.  Create a Database URL:
        Construct a database URL that specifies the database server, port, database name, and any other connection details.
    4.  Establish a Connection:
        Use `DriverManager.getConnection(url, username, password)` to create a database connection.
    5.  Handle Exceptions:
        Wrap the connection code in trycatch blocks to handle potential exceptions like `ClassNotFoundException` and `SQLException`.
    6.  Perform Database Operations:
        Create `Statement` or `PreparedStatement` objects and execute SQL queries or commands against the database.
    7.  Close the Connection:
        Close the database connection using `connection.close()` when you're done to release resources.
    8.  Handle Errors and Exceptions:
        Implement error handling to manage exceptions that may occur during database operations.


    Here's a very concise example to illustrate these steps:

    import java.sql.Connection;
    import java.sql.DriverManager;
    import java.sql.SQLException;
    import java.sql.Statement;

    public class JDBCExample {
        public static void main(String[] args) {
            try {
                // Load the JDBC driver
                Class.forName("com.mysql.jdbc.Driver");

                // Create a database URL
                String url = "jdbc:mysql://localhost:3306/mydatabase";

                // Establish a connection
                Connection connection = DriverManager.getConnection(url, "username", "password");

                // Create a statement
                Statement statement = connection.createStatement();

                // Execute SQL queries
                // ...

                // Close the connection
                connection.close();
            } catch (ClassNotFoundException e) {
                e.printStackTrace();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }