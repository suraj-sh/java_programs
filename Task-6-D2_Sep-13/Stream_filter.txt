7.5 Illustrate the use of the filter() operation with stream.

->  The `filter()` operation in a stream is used to select elements from a stream 
    that meet a specified condition. 
    
    Here's an example illustrating its use:

    import java.util.Arrays;
    import java.util.List;
    import java.util.stream.Collectors;

    public class FilterExample{
        public static void main(String[] args){
            List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

            // Use filter to select even numbers
            List<Integer> evenNumbers = numbers.stream()
                    .filter(num -> num % 2 == 0)
                    .collect(Collectors.toList());

            System.out.println("Even numbers: " + evenNumbers);
        }
    }

    In this example:

    - We start with a list of integers (`numbers`).
    - We use the `filter()` operation to select only the even numbers from the list based 
      on the condition `num % 2 == 0`.
    - The `collect(Collectors.toList())` part is used to collect the filtered elements into 
      a new list (`evenNumbers`).
    - Finally, we print the list of even numbers.

    The `filter()` operation is a powerful tool for selecting elements from a stream that 
    match specific criteria, allowing you to focus on the elements of interest in your data. 