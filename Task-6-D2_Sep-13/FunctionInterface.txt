3.8 What is the purpose of the Function interface? Provide examples.

->  The `Function` interface in Java is used to represent a function that takes an input 
    and produces an output. It's a part of the `java.util.function` package and is widely 
    used for various transformations and computations. 

    Purpose of `Function` Interface:
    - `Function` is used to define a function that takes one argument (input) and returns a result (output).
    - It's often used for data transformations, such as mapping elements in collections, 
    converting data types, or performing calculations.

    Examples:

    1. Mapping Elements in a List:
    import java.util.Arrays;
    import java.util.List;
    import java.util.function.Function;

    public class FunctionExample{
        public static void main(String[] args){
            List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5);

            // Using Function to square each number in the list
            Function<Integer, Integer> square = num -> num * num;

            numbers.stream().map(square).forEach(System.out::println);
        }
    }

    In this example, the `Function` `square` is used to square each number in a list.

    2. Converting String to Integer:
    import java.util.function.Function;

    public class FunctionExample{
        public static void main(String[] args){
            // Using Function to convert a String to an Integer
            Function<String, Integer> strToInt = str -> Integer.parseInt(str);

            String numberStr = "42";
            int result = strToInt.apply(numberStr);
            System.out.println(result); // Output: 42
        }
    }

    Here, the `Function` `strToInt` converts a `String` to an `Integer`.

    The `Function` interface is versatile and allows you to encapsulate various types of 
    computations and transformations in a clean and reusable way by defining a single function 
    that takes input and produces output.